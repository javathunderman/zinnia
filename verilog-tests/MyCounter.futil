import "primitives/core.futil";
import "primitives/memories/comb.futil";

component main(@go go: 1, @clk clk: 1, @reset reset: 1) -> (@done done: 1) {
  cells {
    @external(1) mem = comb_mem_d1(2, 1, 1);
    count = std_reg(4);
    comp = std_lt(4);
    add = std_add(4);
  }

  wires {
    group init {
      count.write_en = 1'b1;
      count.in = 4'b0;
      init[done] = count.done;
    }
    group incr {
      add.left = count.out;
      add.right = 4'd1;
      count.in = add.out;
      count.write_en = 1'b1;
      incr[done] = count.done;
    }
    comb group cond {
      comp.left = count.out;
      comp.right = 4'd4;
    }
    group write {
      mem.addr0 = 1'b0;
      mem.write_data = 2'd2;
      mem.write_en = 1'b1;
      write[done] = mem.done;
    }
  }

  control {
    seq {
      init;
      while comp.out with cond {
        seq {
          write;
          incr;
        }
      }
    }
  }
}
